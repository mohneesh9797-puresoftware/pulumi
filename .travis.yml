if: branch = master OR branch =~ ^features/ OR branch =~ ^feature- OR branch =~ ^feature/ OR tag =~ ^v\d+.*
matrix:
  include:
  - os: linux
    arch: arm64
    env: NODE_VERSION=v12.1.0 TRAVIS_PUBLISH_PACKAGES=true
  - os: linux
    env: NODE_VERSION=v12.1.0 TRAVIS_PUBLISH_PACKAGES=true
  - if: type IN (cron, push)
    os: osx
    env: NODE_VERSION=v10.15.3
  - if: type = cron
    os: linux
    env: NODE_VERSION=v13.11.0
language: go
go: 1.14.x
sudo: true
git:
  depth: false
before_install:

- sudo apt-get install -y make build-essential libssl-dev zlib1g-dev libbz2-dev libreadline-dev libsqlite3-dev wget curl llvm libncurses5-dev xz-utils tk-dev libffi-dev liblzma-dev git
- git clone https://github.com/pyenv/pyenv.git ~/.pyenv
- echo 'export PYENV_ROOT="$HOME/.pyenv"' >> ~/.bashrc
- echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> ~/.bashrc
- echo -e 'if command -v pyenv 1>/dev/null 2>&1; then\n eval "$(pyenv init -)"\nfi' >> ~/.bashrc
- exec $Shell
- |
  if [ "$TRAVIS_PULL_REQUEST_SLUG" != "pulumi/pulumi" ]; 
  then 
    echo "Community PR - Not decrypting gcp credentials";
  else 
    echo "Decrypting gcp credentials"
    openssl aes-256-cbc -K $encrypted_342342ee5e49_key -iv $encrypted_342342ee5e49_iv -in gcp-credentials.json.enc -out gcp-credentials.json -d
  fi
- git clone https://github.com/pulumi/scripts ${GOPATH}/src/github.com/pulumi/scripts
- source ${GOPATH}/src/github.com/pulumi/scripts/ci/prepare-environment.sh
- source ${PULUMI_SCRIPTS}/ci/keep-failed-tests.sh
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then ulimit -n 2048; fi
install:
- source ${PULUMI_SCRIPTS}/ci/install-common-toolchain.sh
before_script:
- "${PULUMI_SCRIPTS}/ci/ensure-dependencies"
script:
- make travis_${TRAVIS_EVENT_TYPE}
- if [ "$TRAVIS_OS_NAME" = "osx" ]; then ./scripts/update_homebrew.sh; fi
after_failure:
- "${PULUMI_SCRIPTS}/ci/upload-failed-tests"
notifications:
  webhooks: https://zlmgkhmhjc.execute-api.us-west-2.amazonaws.com/stage/travis
